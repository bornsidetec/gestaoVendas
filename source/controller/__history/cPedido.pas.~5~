unit cPedido;

interface

uses dPedido, mPedido;

type
  TPedidoController = class
  public
    procedure Pesquisar(dData: TDateTime);
    procedure CarregarPedido(oPedido: TPedido; iId: Integer);
    function Inserir(oPedido: TPedido; var sErro: string): Boolean;
    function Alterar(oPedido: TPedido; var sErro: string): Boolean;
    function Excluir(iId: Integer; var sErro: string): Boolean;
  end;

  TPedidoProdutoController = class
  public
    procedure Pesquisar(iId: Integer);
    procedure CarregarPedidoProduto(oPedidoProduto: TPedidoProduto; iId: Integer);
    function InserirProduto(oPedido: TPedido; var sErro: string): Boolean;
    function AlterarProduto(oPedido: TPedido; var sErro: string): Boolean;
    function ExcluirProduto(iId: Integer; var sErro: string): Boolean;
  end;

implementation

{ TPedidoController }

function TPedidoController.Alterar(oPedido: TPedido;
  var sErro: string): Boolean;
begin

end;

procedure TPedidoController.CarregarPedido(oPedido: TPedido; iId: Integer);
begin

end;

function TPedidoController.Excluir(iId: Integer; var sErro: string): Boolean;
begin

end;

function TPedidoController.Inserir(oPedido: TPedido;
  var sErro: string): Boolean;
begin

end;

procedure TPedidoController.Pesquisar(dData: TDateTime);
begin

end;

{ TPedidoProdutoController }

function TPedidoProdutoController.AlterarProduto(oPedido: TPedido;
  var sErro: string): Boolean;
begin

end;

procedure TPedidoProdutoController.CarregarPedidoProduto(
  oPedidoProduto: TPedidoProduto; iId: Integer);
begin

end;

function TPedidoProdutoController.ExcluirProduto(iId: Integer;
  var sErro: string): Boolean;
begin

end;

function TPedidoProdutoController.InserirProduto(oPedido: TPedido;
  var sErro: string): Boolean;
begin

end;

procedure TPedidoProdutoController.Pesquisar(iId: Integer);
begin

end;

end.
