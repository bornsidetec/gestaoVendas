unit uValidacoes;

interface

type

  TValidacoes = class
  private
    { private declarations }
  public
    { public declarations }
    class function ValidaDatas(sData1, sData2: string; out sErro: string;
      out dData1, dData2: TDateTime): Boolean;
  end;

implementation

{ TValidacoes }

class function TValidacoes.ValidaDatas(sData1, sData2: string;
  out sErro: string; out dData1, dData2: TDateTime): Boolean;
begin
  if sData1 = '  /  /    ' then
    begin
    sErro := 'Data Inicial não preenchida';
    Result := False;
    end;


  if sData2 = '  /  /    ' then
    begin
      sErro := 'Data Final não preenchida';
      Result := False;
    end;


  try
    medtDataIni.SetFocus;
    sData1 := StrToDate(medtDataIni.Text);
    medtDataFim.SetFocus;
    sData2 := StrToDateTime(medtDataFim.Text + ' 23:59:59');
  except
    raise Exception.Create('Data Inválida');
  end;

  if sData1 > sData2 then
  begin
    medtDataFim.SetFocus;
    raise Exception.Create('Data Inicial maior que a data Final');
  end;
end;

end.
