unit TestuCalculos;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, uCalculos;

type
  // Test methods for class TCalculos

  TestTCalculos = class(TTestCase)
  strict private
    FCalculos: TCalculos;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestValor;
    procedure TestImposto;
    procedure TestTotal;
  end;

implementation

procedure TestTCalculos.SetUp;
begin
  FCalculos := TCalculos.Create;
end;

procedure TestTCalculos.TearDown;
begin
  FCalculos.Free;
  FCalculos := nil;
end;

procedure TestTCalculos.TestValor;
const
  dEsperado: Double = 10.5;
var
  dAtual: Double;
  dValor: Double;
  iQuantidade: Double;
begin
  dValor := 1.5;
  iQuantidade := 7;
  dAtual := FCalculos.Valor(iQuantidade, dValor);
  CheckEquals(dEsperado, dAtual, 'Falha no cálculo de Valor');
end;

procedure TestTCalculos.TestImposto;
const
  dEsperado: Double = 1.365;
var
  dAtual: Double;
  dValor: Double;
  dAliquota: Double;
begin
  dValor := 10.5;
  dAliquota := 13;
  dAtual := FCalculos.Imposto(dAliquota, dValor);
  CheckEquals(dEsperado, dAtual, 'Falha no cálculo de Imposto');
end;

procedure TestTCalculos.TestTotal;
const
  dEsperado: Double = 2.145;
var
  dAtual: Double;
  dValor: Double;
  dAliquota: Double;
begin
  dValor := 10.5;
  dAliquota := 13;
  dAtual := FCalculos.Total(dAliquota, dValor);
  CheckEquals(dEsperado, dAtual, 'Falha no cálculo do Total');
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTCalculos.Suite);
end.

